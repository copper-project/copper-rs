name: "CI/CD"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-14 ]  # macos tends to break more often.
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Cargo fmt check
        run: cargo fmt --all -- --check
      
      # Install dependencies only on Linux
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libudev-dev libpcap-dev

      - name: Build
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            # A lot of the non default crates are linux specific or robot target specific.
            cargo build --workspace
          else
            cargo build
          fi

      - name: Run tests
        run: cargo test

      # Integration Test for the 1 liner generation of a project.
      - name: Install cargo-generate
        run: cargo install cargo-generate
      - name: Generate new project in temporary directory
        run: |
          cd templates
          cargo generate -p cu_full --name test_project --destination $RUNNER_TEMP --silent
      - name: Compile generated project # only on linux as it grabs git master, remove after merge
        if: runner.os == 'Linux'
        run: |
          cd $RUNNER_TEMP/test_project
          cargo build --release


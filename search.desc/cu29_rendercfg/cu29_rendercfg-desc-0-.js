searchState.loadedDescShard("cu29_rendercfg", 0, "A CopperListTuple needs to be encodable, decodable and …\nCommon copper Error type.\nContains the error value\nContains the success value\nDefines the types of what can be logged in the unified …\nDefines a basic write, append only stream trait to be able …\nThis module defines the configuration of the copper …\nConfig file name\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRender the configuration file to a dot file then convert …\nOpen the SVG in the default system viewer\nThis represents a connection between 2 tasks (nodes) in …\nThis is the configuration of a component (like a task …\nCuConfig is the programmatic representation of the …\nThe config is a list of tasks and their connections.\nA node in the configuration graph. A node represents a …\nNodeId is the unique identifier of a node in the …\nWrapper around the ron::Value to allow for custom …\nAdd a new node to the configuration graph.\nTells Copper to batch messages before sending the buffer …\nAdds an edge between two nodes/tasks in the configuration …\nAdds an edge between two nodes/tasks in the configuration …\nThis is a custom serialization to make this implementation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvenience method to get all nodes in the configuration …\nGet the list of edges that are connected to the given node …\nGet the node with the given id.\nthis is more like infer from the connections of this node.\nGet the node with the given id mutably.\nthis is more like infer from the connections of this node.\nGet the list of edges that are connected to the given node …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMessage type exchanged between src and dst.\nRead a copper configuration from a file.\nRead a copper configuration from a file.\nRender the configuration graph in the dot format.\nThis is a custom serialization to make this implementation …\nSource node id.\nTells Copper if it needs to log the messages.")